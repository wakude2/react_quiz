{"version":3,"sources":["QuizData.js","Quiz.js","index.js"],"names":["QuizData","id","question","options","answer","Quiz","state","userAnswer","currentIndex","quizEnd","score","disabled","loadQuiz","setState","nextQuestionHander","checkAnswer","finishHandler","length","this","prevProps","prevState","map","item","index","className","option","onClick","Component","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"gMAAaA,EAAW,CACpB,CACIC,GAAI,EACJC,SAAS,gCACTC,QAAS,CAAC,YAAD,wBACTC,OAAO,aAEX,CACIH,GAAI,EACJC,SAAS,gGACTC,QAAS,CAAC,WAAD,+BACTC,OAAO,QAEX,CACIH,GAAI,EACJC,SAAS,4DACTC,QAAS,CAAC,KAAD,gBACTC,OAAO,MAEX,CACIH,GAAI,EACJC,SAAS,2DACTC,QAAS,CAAC,KAAD,gBACTC,OAAO,MAEX,CACIH,GAAI,EACJC,SAAS,4CACTC,QAAS,CAAC,KAAD,iBACTC,OAAO,O,OC6GAC,EAnIf,4MACIC,MAAQ,CACJC,WAAW,KACXC,aAAa,EACbL,QAAS,GACTM,SAAS,EACTC,MAAO,EACPC,UAAU,GAPlB,EAYQC,SAAW,WACP,IAAOJ,EAAgB,EAAKF,MAArBE,aACP,EAAKK,UAAS,WACV,MAAO,CACHX,SAAUF,EAASQ,GAAcN,SACjCC,QAAUH,EAASQ,GAAcL,QACjCC,OAAQJ,EAASQ,GAAcJ,YAlBnD,EAyBQU,mBAAqB,WACjB,MAAoC,EAAKR,MAAlCC,EAAP,EAAOA,WAAYH,EAAnB,EAAmBA,OAAQM,EAA3B,EAA2BA,MAC3B,EAAKG,SAAS,CACVL,aAAc,EAAKF,MAAME,aAAe,IAIzCD,IAAeH,GACd,EAAKS,SAAS,CACVH,MAAOA,EAAQ,KAlCnC,EA6DQK,YAAc,SAAAX,GACV,EAAKS,SAAS,CACVN,WAAYH,EACZO,UAAS,KAhEzB,EAqEQK,cAAe,WACR,EAAKV,MAAME,eAAiBR,EAASiB,OAAQ,GAC5C,EAAKJ,SAAS,CACVJ,SAAQ,KAxE5B,uDAwCQ,WACIS,KAAKN,aAzCjB,gCA6CQ,SAAmBO,EAAWC,GAC1B,IAAMZ,EAAgBU,KAAKZ,MAArBE,aACHU,KAAKZ,MAAME,eAAiBY,EAAUZ,cACrCU,KAAKL,UAAS,WACV,MAAO,CACHF,UAAU,EACVT,SAAUF,EAASQ,GAAcN,SACjCC,QAAUH,EAASQ,GAAcL,QACjCC,OAAQJ,EAASQ,GAAcJ,aArDvD,oBA8EQ,WAAU,IAAD,OACL,EAA+Dc,KAAKZ,MAA7DJ,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,QAASK,EAA1B,EAA0BA,aAAcD,EAAxC,EAAwCA,WACxC,OADA,EAAoDE,QAG5C,gCACI,4DAA+BS,KAAKZ,MAAMI,MAA1C,aACA,qEACA,6BACKV,EAASqB,KAAI,SAACC,EAAMC,GAAP,OACV,oBAAIC,UAAU,UAAd,SAESF,EAAKlB,QADLmB,WAUzB,gCAEA,6BAAKrB,IACD,kDAAmBM,EAAa,EAAhC,eAAwCR,EAASiB,UAChDd,EAAQkB,KAAI,SAAAI,GAAM,OACf,aADsB,CACtB,KACAD,UAAS,kBAAajB,IAAekB,EAAS,WAAa,MAC3DC,QAAU,kBAAM,EAAKX,YAAYU,IAFjC,SAGKA,GAHGA,EAAOxB,OAMlBO,EAAeR,EAASiB,OAAQ,GAEjC,wBAEIO,UAAU,qBACVb,SAAYO,KAAKZ,MAAMK,SACvBe,QAAWR,KAAKJ,mBAJpB,2BAQCN,IAAiBR,EAASiB,OAAQ,GAC/B,wBACAO,UAAU,qBACVb,SAAYO,KAAKZ,MAAMK,SACvBe,QAAWR,KAAKF,cAHhB,2BAxHxB,GAA0BW,a,MCA1B,SAASC,IACL,OACI,qBAAKJ,UAAU,MAAf,SACI,cAAC,EAAD,MAIGI,gBAETC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACL,EAAD,IAAaC,K","file":"static/js/main.9499ac2e.chunk.js","sourcesContent":["export const QuizData = [\r\n    {\r\n        id: 0,\r\n        question: `What is the capital of India?`,\r\n        options: [`New Delhi`, `Abuja`, `Aba`, `Onisha`],\r\n        answer: `New Delhi`\r\n    },\r\n    {\r\n        id: 1,\r\n        question: `Historically, the Desh division of Maharashtra is coterminous with which among the following?`,\r\n        options: [`Amravati`, `Nagpur`, `Pune`, ` Aurangabad`],\r\n        answer: `Pune`\r\n    },\r\n    {\r\n        id: 2,\r\n        question: `What is the number of Rajya Sabha seats from Maharashtra?`,\r\n        options: [`17`, `18`, `19`, `20`],\r\n        answer: `19`\r\n    },\r\n    {\r\n        id: 3,\r\n        question: `A number of Parliamentary Constituencies in Maharashtra?`,\r\n        options: [`42`, `48`, `36`, `50`],\r\n        answer: `48`\r\n    },\r\n    {\r\n        id: 4,\r\n        question: `Total Number of Districts in Maharashtra?`,\r\n        options: [`36`, `34`, `23`, ` 28`],\r\n        answer: `36`\r\n    },\r\n]","import React, { Component} from 'react'\r\nimport {QuizData} from './QuizData';\r\n//import React, {useState, useRef, useEffect} from 'react'\r\n\r\n\r\n\r\n\r\nexport class Quiz extends Component {\r\n    state = {\r\n        userAnswer:null,    //current users answer\r\n        currentIndex:0,  //current questions index\r\n        options: [],       //the four options\r\n        quizEnd: false,\r\n        score: 0,\r\n        disabled: true\r\n    }\r\n        \r\n\r\n        //Component that holds the current quiz\r\n        loadQuiz = () => {\r\n            const {currentIndex} = this.state //get the current index\r\n            this.setState(() => {\r\n                return {\r\n                    question: QuizData[currentIndex].question,\r\n                    options : QuizData[currentIndex].options,\r\n                    answer: QuizData[currentIndex].answer          \r\n                }\r\n            }\r\n            )\r\n        }\r\n\r\n        //Handles Click event for the next button\r\n        nextQuestionHander = () => {\r\n            const {userAnswer, answer, score} = this.state\r\n            this.setState({\r\n                currentIndex: this.state.currentIndex + 1\r\n            })\r\n\r\n            //Check for correct answer and increment score\r\n            if(userAnswer === answer){\r\n                this.setState({\r\n                    score: score + 1\r\n                })\r\n            }\r\n        }\r\n\r\n        //Load the quiz once the component mounts\r\n        componentDidMount(){\r\n            this.loadQuiz();\r\n        }\r\n\r\n        //Update the component\r\n        componentDidUpdate(prevProps, prevState){\r\n            const{currentIndex} = this.state;\r\n            if(this.state.currentIndex !== prevState.currentIndex){\r\n                this.setState(() => {\r\n                    return {\r\n                        disabled: true,\r\n                        question: QuizData[currentIndex].question,\r\n                        options : QuizData[currentIndex].options,\r\n                        answer: QuizData[currentIndex].answer          \r\n                    }\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        //Check the answer\r\n        checkAnswer = answer => {\r\n            this.setState({\r\n                userAnswer: answer,\r\n                disabled:false\r\n            })\r\n        }\r\n\r\n        //Responds to the click of the finish button\r\n        finishHandler =() => {\r\n            if(this.state.currentIndex === QuizData.length -1){\r\n                this.setState({\r\n                    quizEnd:true\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        render() {\r\n            const {question, options, currentIndex, userAnswer, quizEnd} = this.state //get the current state       \r\n            if(quizEnd) {\r\n                return (\r\n                    <div>\r\n                        <h1>Game Over. Final score is {this.state.score} points</h1>\r\n                        <p>The correct Answers for the quiz are</p>\r\n                        <ul>\r\n                            {QuizData.map((item, index) => (\r\n                                <li className='options'\r\n                                    key={index}>\r\n                                        {item.answer}\r\n                                </li>\r\n                        ))}\r\n                        </ul>\r\n                    </div>\r\n                )\r\n            }\r\n                \r\n            return (\r\n                <div>\r\n                    \r\n                <h2>{question}</h2>\r\n                    <span>{`Question ${currentIndex+1} of ${QuizData.length}`}</span>\r\n                    {options.map(option => (  //for each option, new paragraph\r\n                        <p key={option.id} \r\n                        className={`options ${userAnswer === option ? \"selected\" : null}`}\r\n                        onClick= {() => this.checkAnswer(option)}>\r\n                            {option}\r\n                        </p>\r\n                    ))}\r\n                    {currentIndex < QuizData.length -1 &&  \r\n                    // Next button only displays if the above is true\r\n                    <button \r\n                        \r\n                        className=\"ui inverted button\" \r\n                        disabled = {this.state.disabled}\r\n                        onClick = {this.nextQuestionHander}\r\n                        \r\n                    >Next Question</button>\r\n                    }\r\n                    {currentIndex === QuizData.length -1 &&\r\n                        <button\r\n                        className=\"ui inverted button\"\r\n                        disabled = {this.state.disabled}\r\n                        onClick = {this.finishHandler}\r\n                        >Finish</button>\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\nexport default Quiz\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Quiz from './Quiz'\r\n\r\nimport './styles.css';\r\n\r\n\r\nfunction App() {    \r\n    return (\r\n        <div className=\"App\">\r\n            <Quiz />\r\n        </div>\r\n    )\r\n}\r\nexport default App\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(<App></App>, rootElement) \r\n"],"sourceRoot":""}